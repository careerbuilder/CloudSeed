{
  "Type" : "AuroraCluster",
  "Parameters" : {
    "TeamName" : {
      "Description" : "Name of the team who owns the cluster",
      "Type" : "String",
      "Required" : true
    },
    "RDSName" : {
      "Description" : "Name of the created aurora cluster",
      "Type" : "String",
      "Required" : true
    },
    "RDSSG" : {
      "Description" : "IDs of security groups to use for new RDS",
      "Type" : "CommaDelimitedList",
      "Required" : true
    },
    "SubnetGroup" : {
      "Description" : "name of subnet group to use for new RDS",
      "Type" : "String",
      "Required" : true
    },
    "SnapshotID" : {
      "Description" : "ID of snapshot to use (if any)",
      "Type" : "String",
      "Default" : "",
      "Required" : false
    },
    "BackupDays" : {
      "Description" : "Days to backup",
      "Type" : "Number",
      "Default" : 14,
      "Required" : true
    },
    "DBVersion" : {
      "Description" : "Version of the DBEngine",
      "Type" : "String",
      "Default" : "5.6.10a",
      "Required" : false
    },
    "ClusterParameterGroup" : {
      "Description" : "Name of the ParameterGroup for the cluster",
      "Type" : "String",
      "Default" : "",
      "Required" : false
    },
    "InstanceParameterGroup" : {
      "Description" : "Name of the ParameterGroup for the Instances",
      "Type" : "String",
      "Default" : "pg-aurora-sitedb",
      "Required" : false
    },
    "OptionGroup" : {
      "Description" : "Name of OptionGroup",
      "Type" : "String",
      "Required":true
    },
    "SAUserName" : {
      "Description" : "Username of SA user",
      "Type" : "String",
      "Required" : true
    },
    "Portnum" : {
      "Description" : "Port",
      "Type" : "Number",
      "Default" : 3306,
      "Required" : true
    },
    "InstanceSize" : {
      "Description" : "Size and type of DBInstance",
      "Type" : "String",
      "Default" : "db.r3.xlarge",
      "AllowedPattern" : "db.[a-zA-Z]\\d\\.(micro|small|medium|(\\d?x)?large)"
    }
  },
  "Conditions" : {
    "HasClusterParamGroup" : {
      "Fn::Not" : [{
          "Fn::Equals" : ["", {
              "Ref" : "ClusterParameterGroup"
            }
          ]
        }
      ]
    },
    "HasParamGroup" : {
      "Fn::Not" : [{
          "Fn::Equals" : ["", {
              "Ref" : "InstanceParameterGroup"
            }
          ]
        }
      ]
    },
    "HasSnapshot" : {
      "Fn::Not" : [{
          "Fn::Equals" : ["", {
              "Ref" : "SnapshotID"
            }
          ]
        }
      ]
    }
  },
  "Mappings" : {
    "ConfigMap" : {
      "us-east-1" : {
        "AZ" : ["us-east-1b", "us-east-1c"],
        "Append" : ["b", "c"]
      },
      "eu-west-1" : {
        "AZ" : ["eu-west-1a", "eu-west-1b", "eu-west-1c"],
        "Append" : ["a", "b", "c"]
      }
    }
  },
  "Resources" : {
    "DBCluster" : {
      "Type" : "AWS::RDS::DBCluster",
      "Properties" : {
        "AvailabilityZones" : {
          "Fn::FindInMap" : ["ConfigMap", {
              "Ref" : "AWS::Region"
            }, "AZ"]
        },
        "BackupRetentionPeriod" : {
          "Ref" : "BackupDays"
        },
        "DatabaseName" : {
          "Ref" : "RDSName"
        },
        "DBClusterParameterGroupName" : {
          "Fn::If" : ["HasClusterParamGroup", {
              "Ref" : "ClusterParameterGroup"
            }, {
              "Ref" : "AWS::NoValue"
            }
          ]
        },
        "DBSubnetGroupName" : {
          "Ref" : "SubnetGroup"
        },
        "Engine" : "aurora",
        "EngineVersion" : {
          "Ref" : "DBVersion"
        },
        "MasterUsername" : {
          "Ref" : "SAUserName"
        },
        "MasterUserPassword" : "changemeNOW",
        "Port" : {
          "Ref" : "Portnum"
        },
        "SnapshotIdentifier" : {
          "Fn::If" : ["HasSnapshot", {
              "Ref" : "SnapshotID"
            }, {
              "Ref" : "AWS::NoValue"
            }
          ]
        },
        "StorageEncrypted":{"Fn::If" : ["HasSnapshot", false, true]},
        "Tags" : [{
            "Key" : "Name",
            "Value" : {
              "Ref" : "RDSName"
            }
          }, {
            "Key" : "Team",
            "Value" : {
              "Ref" : "TeamName"
            }
          }
        ],
        "VpcSecurityGroupIds" : {
          "Ref" : "RDSSG"
        }
      }
    },
    "ANode" : {
      "Type" : "AWS::RDS::DBInstance",
      "Properties" : {
        "AllowMajorVersionUpgrade" : false,
        "AutoMinorVersionUpgrade" : false,
        "DBClusterIdentifier" : {
          "Ref" : "DBCluster"
        },
        "DBInstanceClass" : {
          "Ref" : "InstanceSize"
        },
        "DBInstanceIdentifier" : {
          "Fn::Join" : ["", [{
                "Ref" : "RDSName"
              }, "-", {
                "Fn::Select" : [0, {
                    "Fn::FindInMap" : ["ConfigMap", {
                        "Ref" : "AWS::Region"
                      }, "Append"]
                  }
                ]
              }
            ]]
        },
        "DBSubnetGroupName" : {
          "Ref" : "SubnetGroup"
        },
        "DBParameterGroupName" : {
          "Fn::If" : ["HasParamGroup", {
              "Ref" : "InstanceParameterGroup"
            }, {
              "Ref" : "AWS::NoValue"
            }
          ]
        },
        "Engine" : "aurora",
        "OptionGroupName" : {
          "Ref" : "OptionGroup"
        },
        "StorageEncrypted":true,
        "PubliclyAccessible" : false
      }
    },
    "BNode" : {
      "Type" : "AWS::RDS::DBInstance",
      "Properties" : {
        "AllowMajorVersionUpgrade" : false,
        "AutoMinorVersionUpgrade" : false,
        "DBClusterIdentifier" : {
          "Ref" : "DBCluster"
        },
        "DBInstanceClass" : {
          "Ref" : "InstanceSize"
        },
        "DBSubnetGroupName" : {
          "Ref" : "SubnetGroup"
        },
        "DBInstanceIdentifier" : {
          "Fn::Join" : ["", [{
                "Ref" : "RDSName"
              }, "-", {
                "Fn::Select" : [1, {
                    "Fn::FindInMap" : ["ConfigMap", {
                        "Ref" : "AWS::Region"
                      }, "Append"]
                  }
                ]
              }
            ]]
        },
        "DBParameterGroupName" : {
          "Fn::If" : ["HasParamGroup", {
              "Ref" : "InstanceParameterGroup"
            }, {
              "Ref" : "AWS::NoValue"
            }
          ]
        },
        "Engine" : "aurora",
        "OptionGroupName" : {
          "Ref" : "OptionGroup"
        },
        "StorageEncrypted":true,
        "PubliclyAccessible" : false
      }
    },
    "HealthcheckA":{
      "Type": "AWS::Route53::HealthCheck",
      "Properties": {
        "HealthCheckConfig": {
          "IPAddress": "52.73.254.249",
          "Port": "80",
          "Type": "HTTP",
          "ResourcePath": {"Fn::Join":["",["/healthcheck/rds/secondary/", {"Ref":"AWS::Region"}, "/", {"Ref":"ANode"}]]},
          "RequestInterval": "30",
          "FailureThreshold": "1"
        },
        "HealthCheckTags" : [
          {
            "Key": "Name",
            "Value": {"Fn::Join":["",[{"Ref":"ANode"},"-rr"]]}
          }
        ]
      }
    },
    "HealthcheckB":{
      "Type": "AWS::Route53::HealthCheck",
      "Properties": {
        "HealthCheckConfig": {
          "IPAddress": "52.73.254.249",
          "Port": "80",
          "Type": "HTTP",
          "ResourcePath": {"Fn::Join":["",["/healthcheck/rds/secondary/", {"Ref":"AWS::Region"}, "/", {"Ref":"BNode"}]]},
          "RequestInterval": "30",
          "FailureThreshold": "1"
        },
        "HealthCheckTags" : [
          {
            "Key": "Name",
            "Value": {"Fn::Join":["",[{"Ref":"BNode"},"-rr"]]}
          }
        ]
      }
    },
    "R53RRPrimary":{
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "Failover" : "PRIMARY",
        "HealthCheckId" : {"Ref":"HealthcheckA"},
        "HostedZoneId" : "Z2NSUT0O5XSS2J",
        "Name" : {"Fn::Join":["",[{"Ref":"RDSName"},"-rr.cbsitedb.net."]]},
        "Region" : {"Ref":"AWS::Region"},
        "ResourceRecords" : [ {"Fn::GetAtt":["ANode","Endpoint.Address"]} ],
        "SetIdentifier" : {"Fn::Join":["",[{"Ref":"RDSName"},"-rr-Primary"]]},
        "TTL" : "60",
        "Type" : "CNAME"
      }
    },
    "R53RRSecondary":{
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "Failover" : "SECONDARY",
        "HealthCheckId" : {"Ref":"HealthcheckB"},
        "HostedZoneId" : "Z2NSUT0O5XSS2J",
        "Name" : {"Fn::Join":["",[{"Ref":"RDSName"},"-rr.cbsitedb.net."]]},
        "ResourceRecords" : [ {"Fn::GetAtt":["BNode","Endpoint.Address"]} ],
        "SetIdentifier" : {"Fn::Join":["",[{"Ref":"RDSName"},"-rr-Secondary"]]},
        "TTL" : "60",
        "Type" : "CNAME"
      }
    },
    "R53Alias":{
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneId" : "Z2NSUT0O5XSS2J",
        "Name" : {"Fn::Join":["",[{"Ref":"RDSName"},".cbsitedb.net."]]},
        "ResourceRecords":[{"Fn::GetAtt":["DBCluster","Endpoint.Address"]}],
        "TTL": "300",
        "Type" : "CNAME"
      }
    }
  },
  "Outputs" : {
    "ClusterID" : {
      "Description" : "ID of created cluster",
      "Value" : {
        "Ref" : "DBCluster"
      }
    },
    "Node1ID" : {
      "Description" : "ID of created Instance",
      "Value" : {
        "Ref" : "ANode"
      }
    },
    "Node2ID" : {
      "Description" : "ID of created Instance",
      "Value" : {
        "Ref" : "BNode"
      }
    },
    "R53Cluster":{
      "Description" : "Aliased domain of the cluster",
      "Value" : {
        "Ref" : "R53Alias"
      }
    },
    "R53rrPri":{
      "Description" : "Primary RR", 
      "Value" : {
        "Ref" : "R53RRPrimary"
      }
    },
    "R53rrSec":{
      "Description" : "Secondary RR", 
      "Value" : {
        "Ref" : "R53RRSecondary"
      }
    }
  },
  "Connections" : {
    "Substitutes" : [{
        "Type" : "SubnetGroup",
        "Parameter" : "SubnetGroup"
      }, {
        "Type" : "List::SecurityGroup",
        "Parameter" : "RDSSG"
      }
    ]
  }
}
